@page "/recipes"
@using BlazorRecipes.Shared.Recipes
@using Microsoft.AspNetCore.Authorization
@using Microsoft.AspNetCore.Components.WebAssembly.Authentication
@using BlazorRecipes.Client.Services
@attribute [Authorize]
@inject IRecipeService RecipeService

<PageTitle>Recipes</PageTitle>

<div class="d-flex justify-content-between flex-wrap flex-md-nowrap align-items-center pt-3 pb-2 mb-3 border-bottom">
    <h1 class="h2">Recipes</h1>
    <div class="btn-toolbar mb-2 mb-md-0">
        <div class="btn-group me-2">
            <a href="recipes/add" class="btn btn-sm btn-outline-secondary">Add Recipe</a>
        </div>
    </div>
</div>

@if (recipes == null)
{
    <Spinner />
}
else
{
    <div class="row row-cols-sm-2 row-cols-md-3 row-cols-lg-4 row-cols-xl-5 row-cols-xxl-6 g-4">
        @foreach (var recipe in recipes)
        {
            <div class="col">
                <RecipeCard Recipe="@recipe" />
            </div>
        }
    </div>
}

@code {
    private Recipe[]? recipes;

    protected override async Task OnInitializedAsync()
    {
        try
        {
            var allRecipes = await RecipeService.GetAllRecipesAsync();

            recipes = allRecipes.ToArray();
        }
        catch (AccessTokenNotAvailableException exception)
        {
            exception.Redirect();
        }
    }

}
